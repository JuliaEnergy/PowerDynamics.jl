## Documentation: http://docs.travis-ci.com/user/languages/julia/
language: julia
os:
  - linux
  - osx
julia:
  - 1.0
  # - nightly
notifications:
  email: false
git:
  depth: 99999999
env:
  global:
    - PYTHON=conda # necessary for SymPy
  matrix:
   - USE_POWER_DYN_MASTER=true
#  allow_failures:
#      - USE_POWER_DYN_MASTER=false

# uncomment the following lines to allow failures on nightly julia
# (tests will run but not make your overall status red)
#matrix:
#  allow_failures:
#    - julia: nightly

## uncomment and modify the following lines to manually install system packages
#addons:
#  apt: # apt-get for linux
#    packages:
#    - gfortran
before_install:
  - julia -e "using InteractiveUtils; versioninfo();"
  - if [ $USE_POWER_DYN_MASTER = true ]; then julia -e 'using Pkg; Pkg.add([PackageSpec(url="https://github.com/JuliaEnergy/PowerDynBase.jl.git"), PackageSpec(url="https://github.com/JuliaEnergy/PowerDynSolve.jl.git")])'; fi
  - julia -e 'using Pkg; Pkg.add("Documenter")'

#before_script:
#  - julia -e "using InteractiveUtils; versioninfo();"
#  - if [ $TRAVIS_OS_NAME = osx ]; then brew install gcc; fi

## uncomment the following lines to override the default test script
script:
  #- julia -e 'Pkg.clone(pwd()); Pkg.build("DPSASolve"); Pkg.test("DPSASolve"; coverage=true)'
  - julia --check-bounds=yes --color=yes -e 'using Pkg; Pkg.test(coverage=true)'
  - julia 'docs/make.jl'
after_success:
  # push coverage results to Coveralls
  # - julia -e 'cd(Pkg.dir("DPSASolve")); Pkg.add("Coverage"); using Coverage; Coveralls.submit(Coveralls.process_folder())'
  # push coverage results to Codecov
  - julia -e 'using Pkg; Pkg.add("Coverage"); using Coverage; Codecov.submit(Codecov.process_folder())'
